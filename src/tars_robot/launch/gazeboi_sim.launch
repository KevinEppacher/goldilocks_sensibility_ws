<?xml version="1.0"?>
<launch>
    <arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface" 
    doc="The hardware_interface to expose for each joint in the simulated robot (one of: [PositionJointInterface, VelocityJointInterface, EffortJointInterface])"/>
    <!-- Controller configuration -->
    <arg name="controller_config_file" default="$(find ur_gazebo)/config/ur10_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
    <arg name="controllers" default="joint_state_controller eff_joint_traj_controller scaled_pos_joint_traj_controller" doc="Controllers that are activated by default."/>
    <arg name="stopped_controllers" default="joint_group_eff_controller" doc="Controllers that are initally loaded, but not started."/>

    <!-- robot_state_publisher configuration -->
    <arg name="tf_prefix" default="" doc="tf_prefix used for the robot."/>
    <arg name="tf_pub_rate" default="125" doc="Rate at which robot_state_publisher should publish transforms."/>

    <!-- Set teh position in empty world-->
    <arg name="x" default="0" />
    <arg name="y" default="0" />
    <arg name="z" default="0.5" />

    <!-- Gazebo parameters -->
    <arg name="gazebo_model_name" default="bdr_ur10" doc="The name to give to the model in Gazebo (after spawning it)." />
    <arg name="gazebo_world" default="worlds/empty.world" doc="The '.world' file to load in Gazebo." />
    <arg name="gui" default="true" doc="If true, Gazebo UI is started. If false, only start Gazebo server." />
    <arg name="paused" default="true" doc="If true, start Gazebo in paused mode. If false, start simulation as soon as Gazebo has loaded." />
    <arg name="robot_description_param_name" default="robot_description" doc="Name of the parameter which contains the robot description (ie: URDF) which should be spawned into Gazebo." />
    <arg name="spawn_z" default="0.1" doc="At which height the model should be spawned. NOTE: lower values will cause the robot to collide with the ground plane." />
    <arg name="start_gazebo" default="true" doc="If true, Gazebo will be started. If false, Gazebo will be assumed to have been started elsewhere." />

    <!--Setting initial configuration -->
    <arg name="initial_joint_positions" default=" -J shoulder_pan_joint 0.0  -J shoulder_lift_joint -1.57 -J elbow_joint 0.0 -J wrist_1_joint 0.0 -J wrist_2_joint 0.0 -J wrist_3_joint 0.0" doc="Initial joint configuration of the robot"/>

    <!-- Associate to the robot description parameter, the urdf file that model the robot-->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find ur10_description_v3)/urdf/ur10_description_v3.urdf
        transmission_hw_interface:=$(arg transmission_hw_interface)" />

    <!-- <rosparam command="load" file="$(find rod_ur_gazebo)/config/ur10_eff_controllers.yaml"/> -->
    <!-- Load controller settings -->
    <rosparam file="$(arg controller_config_file)" command="load"/>

    <!-- Robot state publisher -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="$(arg tf_pub_rate)" />
      <param name="tf_prefix" value="$(arg tf_prefix)" />
    </node>

    <!-- Start Gazebo and load the empty world if requested to do so -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg start_gazebo)">
      <arg name="world_name" value="$(arg gazebo_world)"/>
      <arg name="paused" value="$(arg paused)"/>
      <arg name="gui" value="$(arg gui)"/>
    </include>

    <!-- Load and start the controllers listed in the 'controllers' arg. -->
    <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner"
      args="$(arg controllers)" output="screen" respawn="false" />

    <!-- Load other controllers, but do not start them -->
    <node name="ros_control_stopped_spawner" pkg="controller_manager" type="spawner"
      args="--stopped $(arg stopped_controllers)" output="screen" respawn="false" />

    <!-- Spawn the model loaded earlier in the simulation just started -->
    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model"
      args="
        -urdf
        -param $(arg robot_description_param_name)
        -model $(arg gazebo_model_name)
        -x $(arg x)
        -y $(arg y)
        -z $(arg z)
        $(arg initial_joint_positions)"
      output="screen" respawn="false" />

    <include file="$(find bdr_ur10_moveit)/launch/moveit_planning_execution.launch" >
        <arg name="sim" value="true" />
    </include>

    <include file="$(find bdr_ur10_moveit)/launch/moveit_rviz.launch" >
        <arg name="rviz_config" value="true" />
    </include>

</launch>